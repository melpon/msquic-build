name: build-workflow

on:
  push:
    paths-ignore:
    - 'doc/**'
    - '**.md'
    - 'LICENSE'
    - 'NOTICE'

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        name:
          - windows_x86_64
    name: Build msquic for ${{ matrix.name }}
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - uses: microsoft/setup-msbuild@v1.1
      - run: python3 run.py --package ${{ matrix.name }}
      - name: Get package name
        run: |
          Get-Content "_package\${{ matrix.name }}\release\msquic.env" | Foreach-Object {
            if (!$_) { continue }
            $var = $_.Split('=')
            New-Variable -Name $var[0] -Value $var[1] -Force
          }
          echo "name=${PACKAGE_NAME}" >> ${Env:GITHUB_OUTPUT}
        id: package_name
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package_name.outputs.name }}
          path: _package/${{ matrix.name }}/release/${{ steps.package_name.outputs.name }}
      - name: Upload Environment
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}.env
          path: _package/${{ matrix.name }}/release/msquic.env
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        name:
          - macos_arm64
          - ios
    name: Build msquic for ${{ matrix.name }}
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - run: python3 run.py --package ${{ matrix.name }}
      - name: Get package name
        run: |
          source _package/${{ matrix.name }}/release/msquic.env
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
        id: package_name
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package_name.outputs.name }}
          path: _package/${{ matrix.name }}/release/${{ steps.package_name.outputs.name }}
      - name: Upload Environment
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}.env
          path: _package/${{ matrix.name }}/release/msquic.env
  build-ubuntu-2004:
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-20.04_x86_64
          - android
    name: Build msquic for ${{ matrix.name }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install deps for Android
        if: matrix.name == 'android'
        run: |
          sudo apt-get -y install ninja-build
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.8
        if: matrix.name == 'android'
      - run: python3 run.py --package ${{ matrix.name }}
      - name: Get package name
        run: |
          source _package/${{ matrix.name }}/release/msquic.env
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
        id: package_name
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package_name.outputs.name }}
          path: _package/${{ matrix.name }}/release/${{ steps.package_name.outputs.name }}
      - name: Upload Environment
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}.env
          path: _package/${{ matrix.name }}/release/msquic.env
  create-release:
    name: Create Release
    if: contains(github.ref, 'tags/v')
    needs:
      - build-windows
      - build-macos
      - build-ubuntu-2004
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: ./.github/actions/download
        with:
          platform: windows_x86_64
      - uses: ./.github/actions/download
        with:
          platform: macos_arm64
      - uses: ./.github/actions/download
        with:
          platform: ios
      - uses: ./.github/actions/download
        with:
          platform: ubuntu-20.04_x86_64
      - uses: ./.github/actions/download
        with:
          platform: android
      - name: Env to output
        run: |
          echo "package_paths<<EOF" >> $GITHUB_OUTPUT
          cat package_paths.env >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: env
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files:
            ${{ steps.env.outputs.package_paths }}
